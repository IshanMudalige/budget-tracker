name: Budget Tracker Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build & Deploy on Self-Hosted Runner
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22]

    steps:
      # -------------------- Checkout --------------------
      - name: Checkout Repository
        uses: actions/checkout@v3

      # -------------------- Setup Node --------------------
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # -------------------- Clean old deps --------------------
      - name: Clean old dependencies
        run: |
          echo "Cleaning old node_modules..."
          rm -rf frontend/node_modules backend/node_modules
          yarn cache clean

      # -------------------- Stop running apps --------------------
      - name: Stop running apps (PM2)
        run: pm2 stop all || true

      # -------------------- Install Backend --------------------
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          echo "Installing backend deps..."
          yarn install --frozen-lockfile
          yarn list || true

      # -------------------- Install Frontend --------------------
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          echo "Installing frontend deps..."
          yarn install --frozen-lockfile
          yarn list react-scripts || echo "⚠️ react-scripts missing!"

      # -------------------- Build Frontend --------------------
      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npx react-scripts --version || echo "⚠️ react-scripts still missing before build!"
          yarn build

      # -------------------- Run Backend Tests --------------------
      - name: Run Backend Tests
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: yarn test

      # -------------------- Create Backend .env --------------------
      - name: Create Backend .env
        working-directory: ./backend
        run: |
          echo "Creating .env for backend..."
          touch .env
          echo "${{ secrets.PROD }}" > .env

      # -------------------- Start Apps --------------------
      - name: Start Apps with PM2
        run: |
          pm2 start ./backend/index.js --name backend
          pm2 restart all
          pm2 save