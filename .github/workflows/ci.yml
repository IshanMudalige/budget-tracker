name: Budget Tracker Pipeline

on:
  push:
    branches:
      - main  # Trigger CI on pushes to the main branch

jobs:
  build-and-deploy:
    name: Build, Test, and Deploy Application
    runs-on: self-hosted

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}
      PROD_ENV_CONFIG: ${{ secrets.PROD }}

    strategy:
      matrix:
        node-version: [22]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        # Removed cache: 'yarn' from here to avoid root-level lock file issues

    - name: Verify Environment Variables Are Set
      run: |
        echo "MONGO_URI is set (masked in logs)."
        echo "JWT_SECRET is set (masked in logs)."
        echo "PORT is set (masked in logs)."
        echo "PROD_ENV_CONFIG is set (masked in logs)."

    - name: Configure Swap Space for Frontend Build
      run: |
        echo "Configuring 4GB swap file..."
        sudo fallocate -l 4G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show
        echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab

    - name: Stop PM2 Processes (if running)
      run: pm2 stop all || true

    - name: Cache Backend Dependencies
      uses: actions/cache@v3
      with:
        path: ./backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-backend-
      working-directory: ./backend # Ensure context is correct for path and key

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
       npm install --global yarn
       yarn --version
       yarn install --frozen-lockfile

    - name: Cache Frontend Dependencies
      uses: actions/cache@v3
      with:
        path: ./frontend/node_modules
        key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-frontend-
      working-directory: ./frontend # Ensure context is correct for path and key

    - name: Install Frontend Dependencies and Build
      working-directory: ./frontend
      run: |
        echo "Checking disk space before frontend build..."
        df -h
        echo "Removing existing build directory..."
        sudo rm -rf ./build || true
        echo "Installing frontend dependencies..."
        yarn install --frozen-lockfile
        echo "Building frontend application..."
        yarn run build

    - name: Remove Swap Space
      if: always()
      run: |
        echo "Removing swap file..."
        sudo swapoff /swapfile
        sudo rm /swapfile
        sudo sed -i '/\/swapfile/d' /etc/fstab

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test

    - name: Create Backend .env File
      working-directory: ./backend # Added working directory here
      run: |
        echo "Creating .env file from PROD_ENV_CONFIG secret..."
        echo "${{ env.PROD_ENV_CONFIG }}" > .env
        cat .env

    - name: Start PM2 Processes
      run: pm2 start all

    - name: Restart PM2 Processes (Optional)
      run: pm2 restart all
