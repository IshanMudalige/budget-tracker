name: MERN App CI/CD (Self-Hosted Runner)

on:
  push:
    branches:
      - main  # Trigger only on pushes to main branch

jobs:
  deploy:
    name: Build & Deploy to EC2 (Self-Hosted)
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Print Environment Variables
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: |
        echo "Using Mongo URI: $MONGO_URI"
        echo "JWT Secret is set"
        echo "Port: $PORT"

    - name: Stop Existing PM2 Apps (if any)
      run: |
        pm2 list || echo "PM2 not installed yet"
        pm2 delete all || echo "No PM2 processes to delete"

    - name: Cache Backend Dependencies
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: backend-${{ hashFiles('backend/yarn.lock') }}
        restore-keys: |
          backend-

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        echo "Installing backend dependencies..."
        yarn install --frozen-lockfile
        echo "Backend dependencies installed."

    - name: Cache Frontend Dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: frontend-${{ hashFiles('frontend/yarn.lock') }}
        restore-keys: |
          frontend-

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: 
        echo "Installing frontend dependencies..."
        yarn install --frozen-lockfile

    - name: Build Frontend
      working-directory: ./frontend
      timeout-minutes: 10
      run: |
        echo "Building frontend..."
        yarn build

    - name: Run Backend Tests
      working-directory: ./backend
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: |
        echo "Running backend tests..."
        yarn test || echo "âš  Tests failed but continuing"
        echo "Tests finished."

    - name: Create .env File for Backend
      working-directory: ./backend
      run: |
        echo "${{ secrets.PROD }}" > .env
        echo ".env file created."

    - name: Start PM2 Processes
      run: |
        echo "Starting backend with PM2..."
        cd ./backend
        pm2 start server.js --name backend || echo "Backend start failed"
        echo "Backend started."

    - name: Restart PM2 Processes
      run: |
        echo "Restarting PM2 processes..."
        pm2 restart all || echo "No processes to restart"
        pm2 list
